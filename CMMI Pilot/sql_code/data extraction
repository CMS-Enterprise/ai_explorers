--This SnowSQL uses a project ADM - this will need to be changed if the user does not have access

DROP TABLE IF EXISTS CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_ALL;
--Create a cohort of beneficiaries with Part A and B FFS enrollment
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_ALL AS 
SELECT DISTINCT 
BENE_SK,
MIN(BENE_BIRTH_DT) AS BENE_BIRTH_DT, 
MIN(BENE_DEATH_DT) AS BENE_DEATH_DT, 
MIN(BENE_RACE_CD) AS BENE_RACE_CD,
MAX(BENE_RTI_RACE_CD) AS BENE_RTI_RACE_CD,
MIN(BENE_SEX_CD) AS BENE_SEX_CD,
MIN(GEO_SK) AS GEO_SK,
 --If bene had Low Income Subsidy during 2018 or 2019
CASE WHEN MAX(CASE WHEN BENE_LIS_IND_CD = 'Y' THEN 1 ELSE 0 END) =1 THEN 1 ELSE 0 END AS LIS_STATUS,
 --If bene had Dual Status during 2018 or 2019
CASE WHEN MAX(CASE WHEN BENE_DUAL_STUS_CD IN ('01','02','03','04','05','06','08') THEN 1 ELSE 0 END)=1 THEN 1 ELSE 0 END AS DUAL_STATUS,
--Min and Max dates of Part A status else NULL
MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) AS MIN_ADATE,
MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) AS MAX_ADATE,
--Number of months of Part A Enrollment in 2018
CASE WHEN MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2018-01-01' AND
          MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2018-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2018-01-01' AND
          MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-02' AND '2018-12-31' 
          THEN (DATEDIFF(MONTH, '2018-01-01',MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2018-12-31'))+1
     ELSE 0 END AS PARTA_18,
 --Number of months of Part A Enrollment in 2019
 CASE WHEN MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2019-01-01' AND
          MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2019-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2019-01-01' AND
          MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-02' AND '2019-12-31' 
          THEN (DATEDIFF(MONTH, '2019-01-01',MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2019-12-31'))+1
     ELSE 0 END AS PARTA_19,
--Min and Max dates of Part B status else null
MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) AS MIN_BDATE,
MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) AS MAX_BDATE,
--Number of months of Part B Enrollment in 2018
CASE WHEN MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2018-01-01' AND
          MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2018-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2018-01-01' AND
          MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-02' AND '2018-12-31' 
          THEN (DATEDIFF(MONTH, '2018-01-01',MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2018-12-31'))+1
     ELSE 0 END AS PARTB_18,
 --Number of months of Part B Enrollment in 2019
 CASE WHEN MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2019-01-01' AND
          MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2019-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2019-01-01' AND
          MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-02' AND '2019-12-31' 
          THEN (DATEDIFF(MONTH, '2019-01-01',MAX(CASE WHEN BENE_PTA_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTB_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2019-12-31'))+1
     ELSE 0 END AS PARTB_19,
--Min and Max dates of Part D status else null
MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) AS MIN_DDATE,
MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) AS MAX_DDATE,
--Number of months of Part D Enrollment in 2018
CASE WHEN MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2018-01-01' AND
          MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2018-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2018-01-01' AND
          MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2018-01-02' AND '2018-12-31' 
          THEN (DATEDIFF(MONTH, '2018-01-01',MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2018-01-01' AND '2018-12-31') AND
          (MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2018-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2018-12-31'))+1
     ELSE 0 END AS PARTD_18,
 --Number of months of Part D Enrollment in 2019
 CASE WHEN MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <= '2019-01-01' AND
          MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >= '2019-12-31' THEN 12
     WHEN (MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) ,
            MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END)))+1
     WHEN MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) <'2019-01-01' AND
          MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) BETWEEN '2019-01-02' AND '2019-12-31' 
          THEN (DATEDIFF(MONTH, '2019-01-01',MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END))+1)
     WHEN (MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END) BETWEEN '2019-01-01' AND '2019-12-31') AND
          (MAX(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_OBSLT_DT ELSE NULL END) >'2019-12-31') 
          THEN (DATEDIFF(MONTH, MIN(CASE WHEN BENE_PTD_STUS_CD = 'Y' THEN BENE_FCT_EFCTV_DT ELSE NULL END),'2019-12-31'))+1
     ELSE 0 END AS PARTD_19
FROM CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_BENE_FCT_TRANS_HSTRY 
WHERE  
	  BENE_FCT_EFCTV_DT <= '2019-12-31' AND
      BENE_FCT_OBSLT_DT >= '2018-01-01' AND /*Between Jan 1 2018 and Dec 31 2019*/
	  CNTRCT_PTC_NUM = 'UNK' AND /*ONLY FFS*/
	  BENE_BIRTH_DT < '1953-01-01' AND /*OVER 65 AS OF 2018*/	   
      BENE_MDCR_STUS_CD not in ('11','21','31') /*NON-ESRD*/ AND
	  IDR_TRANS_OBSLT_TS = '9999-12-31'
GROUP BY BENE_SK;

DROP TABLE IF EXISTS CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A;
--Limit Cohort to only beneficiaries with at least one month of Part A and Part B FFS Enrollment
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A AS 
SELECT DISTINCT
BENE_SK,
BENE_BIRTH_DT,
BENE_DEATH_DT,
BENE_RACE_CD,
BENE_RTI_RACE_CD,
BENE_SEX_CD,
LIS_STATUS,
DUAL_STATUS,
GEO_FIPS_STATE_CD,
GEO_FIPS_CNTY_CD,
CASE WHEN GEO_URBN_RRL_CD IS NULL THEN 'UNKNOWN' ELSE GEO_URBN_RRL_CD END AS GEO_URBN_RRL_CD,
PARTA_18,
PARTB_18,
PARTD_18,
PARTA_19,
PARTB_19,
PARTD_19
FROM CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_ALL A LEFT JOIN CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_GEO_ZIP5_CD B ON A.GEO_SK=B.GEO_SK
 		AND GEO_ZIP5_ACTV_SW = 'Y'  
WHERE PARTA_18 >0 AND PARTA_19 >0 AND PARTB_18 >0 AND PARTB_19 >0;

--Copy table into S3 bucket
copy into @IDRC_PRD.CMS_ADM_PTDPYMT_MOD_PRD.CMMI_AI_POC_STG/COHORT_A_ZIP from (select * from CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A)
FILE_FORMAT =(TYPE=CSV FIELD_DELIMITER=',' COMPRESSION=gzip) SINGLE=TRUE HEADER=TRUE MAX_FILE_SIZE=5368709120;

--Pull all diagnosis codes from all claim types in 2018 for the Cohort and create diagnosis groups
DROP TABLE IF EXISTS CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX;
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX AS
SELECT DISTINCT A.BENE_SK, 
CLM_DGNS_CD,
 CASE    WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'A00' AND 'B99' THEN '1_CERTAIN_INFECTIOUS_PARASITIC'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'C00' AND 'D49' THEN '2_NEOPLASMS'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'D50' AND 'D89' THEN '3_BLOOD'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'E00' AND 'E89' THEN '4_ENDOCRINE_NUTRITIONAL_METABOLIC'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'F01' AND 'F99' THEN '5_MENTAL_BEHAVIORAL'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'G00' AND 'G99' THEN '6_NERVOUS_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'H00' AND 'H59' THEN '7_EYE_ADNEXA_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'H60' AND 'H95' THEN '8_EAR_MASTOID_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'I00' AND 'I99' THEN '9_CIRCULATORY_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'J00' AND 'J99' THEN '10_RESPIRATORY_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'K00' AND 'K95' THEN '11_DIGESTIVE_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'L00' AND 'L99' THEN '12_SKIN_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'M00' AND 'M99' THEN '13_MUSCULOSKELETAL_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'N00' AND 'N99' THEN '14_GENITOURINARY_DISEASES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'O00' AND 'O9A' THEN '15_PREGNANCY_CHILDBIRTH'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'P00' AND 'P96' THEN '16_PERINATAL'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'Q00' AND 'Q99' THEN '17_CONGENITAL_MALFORMATIONS'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'R00' AND 'R99' THEN '18_ABNORMAL_CLINICAL_FINDINGS'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'S00' AND 'T88' THEN '19_INJURY_POISIONING'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'U00' AND 'U85' THEN '20_SPECIAL_PURPOSES'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'V00' AND 'Y99' THEN '21_EXTERNAL_CAUSES_MORBIDITY'
         WHEN SUBSTR(CLM_DGNS_CD,1,3) BETWEEN 'Z00' AND 'Z99' THEN '22_FACTORS_INFLUENCING'
         ELSE NULL END AS DX_SUBGRP
FROM CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A A INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM B ON A.BENE_SK=B.BENE_SK INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM_PROD C ON B.GEO_BENE_SK=C.GEO_BENE_SK  AND 
	B.CLM_DT_SGNTR_SK=C.CLM_DT_SGNTR_SK AND B.CLM_TYPE_CD=C.CLM_TYPE_CD AND
	B.CLM_NUM_SK=C.CLM_NUM_SK
WHERE YEAR(CLM_THRU_DT) = 2018 AND /*Limit to 2018*/
B.CLM_TYPE_CD IN (10,20,30,40,50,60,71,72,81,82) AND /*All claim types*/ 
CLM_DGNS_CD IS NOT NULL AND 
CLM_FFS_IND = 'Y' AND /*Only FFS claims*/
CLM_FINL_ACTN_IND = 'Y';

--Put all dx code and dx groups in an array to create a table with one row per bene
DROP TABLE IF EXISTS CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX_ARRAY;
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX_ARRAY AS
SELECT DISTINCT BENE_SK, 
ARRAY_AGG(DISTINCT CLM_DGNS_CD) WITHIN GROUP (ORDER BY CLM_DGNS_CD) AS DX_ARRAY,
ARRAY_AGG(DISTINCT DX_SUBGRP) WITHIN GROUP (ORDER BY DX_SUBGRP)  AS DX_SUBGRP_ARRAY
FROM CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX
GROUP BY BENE_SK;

--Copy diagnosis table into S3 bucket
copy into @IDRC_PRD.CMS_ADM_PTDPYMT_MOD_PRD.CMMI_AI_POC_STG/COHORT_A_DX_T from (select * from CMS_ADM_PTDPYMT_MOD_PRD.COHORT_DX_ARRAY)
FILE_FORMAT =(TYPE=CSV FIELD_DELIMITER='\t' COMPRESSION=gzip) SINGLE=TRUE HEADER=TRUE MAX_FILE_SIZE=5368709120;

--Pull all procedure codes and corresponding BETOS codes on all 2018 claims
DROP TABLE IF EXISTS CMS_ADM_PTDPYMT_MOD_PRD.COHORT_PROC_ARRAY;
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.COHORT_PROC_ARRAY AS
SELECT DISTINCT A.BENE_SK, 
ARRAY_AGG(DISTINCT CLM_LINE_HCPCS_CD) WITHIN GROUP (ORDER BY CLM_LINE_HCPCS_CD) AS PROC_ARRAY,
ARRAY_AGG(DISTINCT HCPCS_BETOS_CD) WITHIN GROUP (ORDER BY HCPCS_BETOS_CD) AS BETOS_ARRAY
FROM CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A A INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM B ON A.BENE_SK=B.BENE_SK INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM_LINE C ON B.GEO_BENE_SK=C.GEO_BENE_SK  AND 
	B.CLM_DT_SGNTR_SK=C.CLM_DT_SGNTR_SK AND B.CLM_TYPE_CD=C.CLM_TYPE_CD AND
	B.CLM_NUM_SK=C.CLM_NUM_SK LEFT JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_HCPCS_CD D ON C.CLM_LINE_HCPCS_CD=D.HCPCS_CD
	AND CLNDR_HCPCS_YR_NUM = 2018
WHERE YEAR(CLM_THRU_DT) = 2018 AND 
B.CLM_TYPE_CD IN (40,50,60,71,72,81,82) AND 
CLM_LINE_HCPCS_CD IS NOT NULL AND 
CLM_LINE_HCPCS_CD <> '' AND
CLM_FFS_IND = 'Y' AND 
CLM_FINL_ACTN_IND = 'Y'
GROUP BY A.BENE_SK;


--Copy procedure table into S3 bucket
copy into @IDRC_PRD.CMS_ADM_PTDPYMT_MOD_PRD.CMMI_AI_POC_STG/COHORT_A_PROC_T from (select * from CMS_ADM_PTDPYMT_MOD_PRD.COHORT_PROC_ARRAY)
FILE_FORMAT =(TYPE=CSV FIELD_DELIMITER='\t' COMPRESSION=gzip) SINGLE=TRUE HEADER=TRUE MAX_FILE_SIZE=5368709120;

--Pull all 2018 NDC and corresponding USP drug class for cohort
CREATE TABLE CMS_ADM_PTDPYMT_MOD_PRD.COHORT_RX_ARRAY AS
SELECT DISTINCT A.BENE_SK, 
ARRAY_AGG(DISTINCT CLM_LINE_NDC_CD) WITHIN GROUP (ORDER BY CLM_LINE_NDC_CD) AS NDC_ARRAY,
ARRAY_AGG(DISTINCT TO_VARCHAR(CLASS_NO)) WITHIN GROUP (ORDER BY TO_VARCHAR(CLASS_NO)) AS CLASS_ARRAY
FROM CMS_ADM_PTDPYMT_MOD_PRD.AI_COHORT_A A INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM B ON A.BENE_SK=B.BENE_SK INNER JOIN
CMS_VDM_VIEW_MDCR_PRD.V2_MDCR_CLM_LINE C ON B.GEO_BENE_SK=C.GEO_BENE_SK  AND 
	B.CLM_DT_SGNTR_SK=C.CLM_DT_SGNTR_SK AND B.CLM_TYPE_CD=C.CLM_TYPE_CD AND
	B.CLM_NUM_SK=C.CLM_NUM_SK LEFT JOIN
CMS_ADM_PTDPYMT_MOD_PRD.CSZBRXNORM_USPDC_202209 D ON C.CLM_LINE_NDC_CD=D.NDC
WHERE YEAR(CLM_THRU_DT) = 2018 AND 
B.CLM_TYPE_CD IN (1,2,4) AND 
CLM_LINE_NDC_CD IS NOT NULL AND 
CLM_LINE_NDC_CD <> '' AND
CLM_FINL_ACTN_IND = 'Y'
GROUP BY A.BENE_SK;

--Copy RX table into S3 bucket
copy into @IDRC_PRD.CMS_ADM_PTDPYMT_MOD_PRD.CMMI_AI_POC_STG/COHORT_A_RX_T from (select * from CMS_ADM_PTDPYMT_MOD_PRD.COHORT_RX_A_ARRAY)
FILE_FORMAT =(TYPE=CSV FIELD_DELIMITER='\t' COMPRESSION=gzip) SINGLE=TRUE HEADER=TRUE MAX_FILE_SIZE=5368709120;
